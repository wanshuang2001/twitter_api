// Mocks generated by Mockito 5.4.4 from annotations
// in dart_twitter_api/test/api/mocks/mock_twitter_client.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;
import 'dart:convert' as _i6;

import 'package:dart_twitter_api/twitter_api.dart' as _i3;
import 'package:http/http.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDuration_0 extends _i1.SmartFake implements Duration {
  _FakeDuration_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResponse_1 extends _i1.SmartFake implements _i2.Response {
  _FakeResponse_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [TwitterClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockTwitterClient extends _i1.Mock implements _i3.TwitterClient {
  MockTwitterClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get consumerKey => (super.noSuchMethod(
        Invocation.getter(#consumerKey),
        returnValue: _i4.dummyValue<String>(
          this,
          Invocation.getter(#consumerKey),
        ),
      ) as String);

  @override
  set consumerKey(String? _consumerKey) => super.noSuchMethod(
        Invocation.setter(
          #consumerKey,
          _consumerKey,
        ),
        returnValueForMissingStub: null,
      );

  @override
  String get consumerSecret => (super.noSuchMethod(
        Invocation.getter(#consumerSecret),
        returnValue: _i4.dummyValue<String>(
          this,
          Invocation.getter(#consumerSecret),
        ),
      ) as String);

  @override
  set consumerSecret(String? _consumerSecret) => super.noSuchMethod(
        Invocation.setter(
          #consumerSecret,
          _consumerSecret,
        ),
        returnValueForMissingStub: null,
      );

  @override
  String get token => (super.noSuchMethod(
        Invocation.getter(#token),
        returnValue: _i4.dummyValue<String>(
          this,
          Invocation.getter(#token),
        ),
      ) as String);

  @override
  set token(String? _token) => super.noSuchMethod(
        Invocation.setter(
          #token,
          _token,
        ),
        returnValueForMissingStub: null,
      );

  @override
  String get secret => (super.noSuchMethod(
        Invocation.getter(#secret),
        returnValue: _i4.dummyValue<String>(
          this,
          Invocation.getter(#secret),
        ),
      ) as String);

  @override
  set secret(String? _secret) => super.noSuchMethod(
        Invocation.setter(
          #secret,
          _secret,
        ),
        returnValueForMissingStub: null,
      );

  @override
  String get userId => (super.noSuchMethod(
        Invocation.getter(#userId),
        returnValue: _i4.dummyValue<String>(
          this,
          Invocation.getter(#userId),
        ),
      ) as String);

  @override
  set userId(String? _userId) => super.noSuchMethod(
        Invocation.setter(
          #userId,
          _userId,
        ),
        returnValueForMissingStub: null,
      );

  @override
  Duration get defaultTimeout => (super.noSuchMethod(
        Invocation.getter(#defaultTimeout),
        returnValue: _FakeDuration_0(
          this,
          Invocation.getter(#defaultTimeout),
        ),
      ) as Duration);

  @override
  _i5.Future<_i2.Response> get(
    Uri? uri, {
    Map<String, String>? headers,
    Duration? timeout,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [uri],
          {
            #headers: headers,
            #timeout: timeout,
          },
        ),
        returnValue: _i5.Future<_i2.Response>.value(_FakeResponse_1(
          this,
          Invocation.method(
            #get,
            [uri],
            {
              #headers: headers,
              #timeout: timeout,
            },
          ),
        )),
      ) as _i5.Future<_i2.Response>);

  @override
  _i5.Future<_i2.Response> post(
    Uri? uri, {
    Map<String, String>? headers,
    dynamic body,
    _i6.Encoding? encoding,
    Duration? timeout,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [uri],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
            #timeout: timeout,
          },
        ),
        returnValue: _i5.Future<_i2.Response>.value(_FakeResponse_1(
          this,
          Invocation.method(
            #post,
            [uri],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
              #timeout: timeout,
            },
          ),
        )),
      ) as _i5.Future<_i2.Response>);

  @override
  _i5.Future<_i2.Response> multipartRequest(
    Uri? uri, {
    List<_i2.MultipartFile>? files,
    Map<String, String>? headers,
    String? method = r'POST',
    Duration? timeout,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #multipartRequest,
          [uri],
          {
            #files: files,
            #headers: headers,
            #method: method,
            #timeout: timeout,
          },
        ),
        returnValue: _i5.Future<_i2.Response>.value(_FakeResponse_1(
          this,
          Invocation.method(
            #multipartRequest,
            [uri],
            {
              #files: files,
              #headers: headers,
              #method: method,
              #timeout: timeout,
            },
          ),
        )),
      ) as _i5.Future<_i2.Response>);

  @override
  void setUserId(String? InUserId) => super.noSuchMethod(
        Invocation.method(
          #setUserId,
          [InUserId],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setToken(String? InToken) => super.noSuchMethod(
        Invocation.method(
          #setToken,
          [InToken],
        ),
        returnValueForMissingStub: null,
      );
}
